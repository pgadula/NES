name: Rust Lib + WASM Wrapper + Node Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # Setup Rust
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      # Cache Cargo dependencies
      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo git index
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      # Test the core lib project (assuming it lives in ./m6502)
      - name: Test Rust core lib
        working-directory: ./m6502
        run: cargo test --verbose

      # Add wasm32 target for wrapper build
      - name: Add wasm32 target
        run: rustup target add wasm32-unknown-unknown

      # Build the wrapper crate for wasm32 target
      - name: Build wrapper for wasm32
        working-directory: ./web-emulator
        run: cargo build --target wasm32-unknown-unknown --release

      # Generate wasm-bindgen bindings for wrapper
      - name: Generate wasm-bindgen bindings
        working-directory: ./web-emulator
        run: |
          cargo install wasm-bindgen-cli --version 0.2.100 || true
          wasm-bindgen --target web \
            --out-dir pkg \
            target/wasm32-unknown-unknown/release/web_emulator.wasm

      # Setup Node.js for building Node project
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: web-emulator/package-lock.json

      # Install Node dependencies
      - name: Install Node dependencies
        working-directory: ./web-emulator
        run: npm ci

      # Build Node project
      - name: Build Node project
        working-directory: ./web-emulator
        run: npm run build
