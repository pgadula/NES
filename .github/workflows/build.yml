name: Rust Lib + WASM Wrapper + Node Build + Deploy to Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # Setup Rust
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      # Cache Cargo dependencies
      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo git index
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Test Rust core lib
        working-directory: ./nes
        run: cargo test --verbose

      # Add wasm32 target for wrapper build
      - name: Add wasm32 target
        run: rustup target add wasm32-unknown-unknown

      # Build the wrapper crate for wasm32 target
      - name: Build wrapper for wasm32
        working-directory: ./web-emulator
        run: cargo build --target wasm32-unknown-unknown --release

      # Generate wasm-bindgen bindings for wrapper
      - name: Generate wasm-bindgen bindings
        working-directory: ./web-emulator
        run: |
          cargo install wasm-bindgen-cli --version 0.2.100 || true
          wasm-bindgen --target web \
            --out-dir pkg \
            target/wasm32-unknown-unknown/release/web_emulator.wasm

      # Setup Node.js for building Node project
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: web-emulator/package-lock.json

      - name: Clean node_modules and package-lock.json
        working-directory: ./web-emulator
        run: |
          rm -rf node_modules
          rm -f package-lock.json

      - name: Install Node dependencies
        working-directory: ./web-emulator
        run: npm install

      - name: Build Node project
        working-directory: ./web-emulator
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: web-emulator-dist
          path: ./web-emulator/dist

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: web-emulator-dist
          path: ./web-emulator/dist

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './web-emulator/dist'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
